# This is a GNU -*- Makefile -*- and you will need at least GNU make-4, and maybe make-4.2.1
# Copyright 2019, Oath Inc.
# Licensed under the terms of the Apache-2.0 license. See LICENSE file in https://github.com/yahoo/PROJECT-NAME/blob/master/LICENSE for terms.
default:
#
# Usage, in a Makefile of three (3) lines:
#
#   default:
#   PACKAGES = ... list of packages to build; suffixless e.g. hyperledger-fabric-ca, hyperledger-fabric-node privacychain-montara
#   include ../mk/rpmbuild/Makefrag
#
# Usage, on the command line for convenience
#
#    make usage                      dump this message and exit
#
#    make list                       dump the package NVRA as a table (name version release arch)
#
#    make [ all ]                    the default, as is the convention
#    make all                        make all packages
#    make package-<PACKAGE>          e.g. make package-tooling, make-testing, make-PrivacyChain-sdk-cxx
#
# Internal (very specialized, rarely useful) components of package-<PACKAGE>
# when topdir=/build/rpms
#
#    make /build/rpms/SPECS/<PACKAGE>.spec               make the specfile for <PACKAGE>
#    make /build/rpms/SOURCES/<PACKAGE>..tar.gz          make the tarball for <PACKAGE>
#    make /build/rpms/SRPMS/<PACKAGE>.src.rpm            make the src rpm for <PACKAGE>
#    make /build/rpms/RPMS/x86_64/<PACKAGE>.x86_64.rpm   make the x86_64 rpm for <PACKAGE>
#
# The <PACKAGE> is difficult and non-obvious as it has is in NV format (of NEVR)
#
# Expectations
#
#   You have configured $(topdir) as, e.g., /build/rpms with a layout suitable for rpmbuild.
#   following, e.g.
#     https://docs.fedoraproject.org/ro/Fedora_Draft_Documentation/0.1/html/RPM_Guide/ch08s02s04.html
#     https://linux.die.net/man/8/rpmbuild
#     https://rpm-packaging-guide.github.io/
#
ifeq "0" "$(words $(PACKAGES))"
$(error the PACKAGES variable is not set)
endif

topdir ?= /build/rpms
srpmdir = $(topdir)/SRPMS
rpmdir = $(topdir)/RPMS
specdir = $(topdir)/SPECS
sourcedir = $(topdir)/SOURCES

cwd := $(shell pwd)# because PWD is wrong in 'make -C <directory>'
cwd/.. = $(patsubst %/,%,$(dir $(cwd)))
cwd/../.. = $(patsubst %/,%,$(dir $(patsubst %/,%,$(dir $(cwd)))))
nearby = $(cwd/..)/sources

rpmspec-query = rpmspec --srpm -q --qf="%{name} %{version} %{release} %{arch}" $1.spec
define RECIPE1 =
$1.spec := $(shell $(call rpmspec-query, $1))
endef
define RECIPE2 =
$1.spec := $(shell $(call rpmspec-query, $1))
$(if $(filter 4,$(words $($1.spec))),$(__ok),$(error $1.spec is has $(words $($1.spec)) elements, but must have 4))
$1.name = $(word 1, $($1.spec))
$1.version = $(word 2, $($1.spec))
$1.release = $(word 3, $($1.spec))
$1.arch = $(word 4, $($1.spec))
$1.nv = $$($1.name)-$$($1.version)
$1.nvr = $$($1.name)-$$($1.version)-$$($1.release)
$1.nvr.arch = $($1.nvr.arch).$($1.arch)
# WATCHOUT - allow overriding from the calling Makefile so that a tarball with an syncratic name can be used
$1.nv.tarz ?= $$($1.nv).tar.gz
$1.nvr.tarz = $$(error NO SUCH variable $1.nvr.tarz, instead use $1.nv.tarz)
$1.nv.spec = $$($1.nv).spec
$1.nvr.spec = $$(error NO SUCH variable $1.nvr.spec, instead use $1.nv.spec)
$1.nvr.src.rpm = $$($1.nvr).src.rpm
$1.nvr.arch.rpm = $$($1.nvr).$$($1.arch).rpm
endef
#
# DIRECTORY.package is to be set in the Makefile
# e.g.
#
#    DIRECTORY.state-space-tooling              = $(nearby)/tooling
#    DIRECTORY.state-space-testing              = $(nearby)/testing
#    DIRECTORY.state-space-privacychain-sdk-c++ = $(nearby)/PrivacyChain-sdk-c++
#    DIRECTORY.state-space-fabric-sdk-c++       = $(nearby)/fabric-sdk-c++
#    DIRECTORY.state-space-config-repo          = ignore <----------------------------- no tarball
#    ...etc...
#
define RECIPE3 =
#
# If the DIRECTORY is  'ignore' then do not depend upon the tarball
#                               then the dependencies are ad hoc and hand-coded in the Makefile
#
$(rpmdir)/$$($1.nvr.arch)/$$($1.nvr.arch.rpm) : $(specdir)/$$($1.nv.spec) $(if $(filter-out ignore,$(DIRECTORY.$1)),$(sourcedir)/$$($1.nv.tarz))
	rpmbuild -ba $(__RPMBUILD_OPTIONS) $$(word 1,$$^)
$(specdir)/$$($1.nv.spec) : $1.spec
	install -c -m 444 $$< $$@
$$(if $$(DIRECTORY.$1),$(__ok__),$$(error the variable DIRECTORY.$1 is unset))
$(info DEBUG ifneq "ignore" "$(DIRECTORY.$1)")
ifneq "ignore" "$(DIRECTORY.$1)"
$(sourcedir)/$$($1.nv.tarz) : PACKAGE=$$($1.nv)
$(sourcedir)/$$($1.nv.tarz) : DIRECTORY=$$(DIRECTORY.$1)
$(sourcedir)/$$($1.nv.tarz) : .ALWAYS
	tar \
	    --transform='s,^\.,$$(if $$(PACKAGE),$$(PACKAGE),$$(error PACKAGE is unset))/,' \
	    -C $$(if $$(DIRECTORY),$$(DIRECTORY),$$(error DIRECTORY is unset)) \
	    -zcf $$@ .
endif
endef
REDUNDANT.prefix = state-space
define RECIPE4 =
.PHONY: $(addprefix package-, $1 $(patsubst $(addsuffix -%,$(REDUNDANT.prefix)),%,$1))
$(addprefix package-, $1 $(patsubst $(addsuffix -%,$(REDUNDANT.prefix)),%,$1)): $(rpmdir)/$($1.nvr.arch)/$($1.nvr.arch.rpm)
endef

SRPMS = $(addprefix $(srpmdir)/, $(foreach package,$(PACKAGES),$($(package).nvr.src.rpm)))
RPMS  = $(addprefix $(rpmdir)/, $(foreach package,$(PACKAGES),$($(package).nvr.arch)/$($(package).nvr.arch.rpm)))
SPECS = $(addprefix $(specdir)/, $(foreach package,$(PACKAGES),$($(package).nv.spec)))
TARZ  = $(addprefix $(sourcedir)/, $(foreach package,$(PACKAGES),$($(package).nv.tarz)))

# Whereas RPMBUILD_OPTIONS is reserved to the command line
Makefile_RPMBUILD_OPTIONS = --define='%_topdir $(topdir)'
__RPMBUILD_OPTIONS = $(Makefile_RPMBUILD_OPTIONS) $(RPMBUILD_OPTIONS)

clean: clean-SPECS clean-TARZ
clean-SPECS: ; rm -f $(SPECS)
clean-TARZ: ; rm -f $(TARZ)

distclean: distclean-SRPMS distclean-RPMS
distclean-RPMS: ; rm -f $(RPMS)
distclean-SRPMS: ; rm -f $(SRPMS)

$(foreach package,$(PACKAGES), \
$(eval $(call RECIPE1,$(package)))\
$(eval $(call RECIPE2,$(package)))\
$(eval $(call RECIPE3,$(package)))\
$(eval $(call RECIPE4,$(package))))

list:
	@$(foreach package,$(PACKAGES), echo $($(package).spec);)
usage:
	@sed -n -e '/^default:/,/^PACKAGES/{;/^#/{;s/^#//;p;};/^PACKAGES/q;}' Makefile < /dev/null
.ALWAYS: ;
clean:
all: $(RPMS)
default: all
